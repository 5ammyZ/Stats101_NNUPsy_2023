---
format: 
  revealjs:
    slide-number: true
    logo: images/image-393370223.png
    scrollable: true 
    #css: 
    theme: theme.scss
editor: visual
fontsize: 24pt
---

## 

</br></br>

<h1 style="text-align: center">

04 - Central Tendency and Dispersion Tendency</br>

(集中量数与差异量数)

</h1>

</br></br>

<h3 style="text-align: center">

Hu Chuan-Peng

</h3>

<h3 style="text-align: center">

2023-03-08

</h3>

</br></br>

# Review

</br></br>

<h3 style="text-align: left; font-size: 32px; ">

-   数据类型</br></br>

-   可视化简史</br></br>

-   常见的可视化方法</br></br>

</h3>

## 

</br></br></br></br></br></br>

<h3 style="text-align: center; font-size: 32px; ">

如何描述一份数据？比如示例数据中的selfcontrol？

</h3>

## 

```{r}
library(tidyverse)
library(ggplot2)
library(ggpubr)
penguin_rawdata <- read.csv("Lecture4_files/penguin_rawdata.csv")%>%
                  filter(selfcontrol>0)

penguin_rawdata$sex <- factor(penguin_rawdata$sex)
penguin_rawdata <- penguin_rawdata[penguin_rawdata$sex %in% c(1, 2), ]
```

![](images/image-1290173772.png){fig-align="center"}

## 集中量数

</br></br>

-   集中量数是用来描述一组数据分布集中趋势的指标；

-   常见的集中量数有**平均数**、**中位数**、**众数**；

-   集中量数并不提供关于个体值的信息；

-   集中量数提供整个数据集的全面总结。

## 

<h6 style="text-align: center; font-size: 32px; ">

在正态分布中，无论正态分布的参数是多少，平均值、中位数、众数都是同一个值

</h6>

![](images/image-599960520.png){fig-align="center"}

## 

为什么是集中量数呢？

## 来自认知科学的证据

![](images/image-1231808436.png){fig-align="center"}

<center>(Gardelle & Summerfield, PNAS)</center>

研究发现：观察者倾向于排除或降低感知证据的极端样本的权重，就像统计学家可能排除一个离群的数据点。

## 来自数学的证据

## 期望值和平均值

</br></br>

-   期望值(Expectation)
    -   一个随机变量或其任何给定函数的所有可能值的总和或积分，乘以该变量值的各自概率，一般用于表示总体。
    -   $E(X) = \int xp(x)dx$ </br></br>
-   平均值(Mean)
    -   所有数据之和再除以数据总数，一般用于表示个体。
    -   $\bar{X} = \frac{\sum x_i}{n}$

## 

![](images/image-2069909529.png){fig-align="center"}

<center>当样本量趋近于无穷大时，平均值会趋近于期望值</center>

## 

```{r}
set.seed(123)
mu = 0
sd = 1
n = 5

rv = data.frame(rv = rnorm(n,mu,sd))

ggplot(rv,
       aes(x=rv)) +
  geom_histogram(bins = 5,
                 binwidth = 1, 
                 fill="steelblue", 
                 color="white") +
  labs(x="Value", 
       y="Frequency", ) +
  theme_classic()+
  geom_vline(xintercept = mean(rv$rv), color="lightpink", linetype="dashed")+
  geom_vline(xintercept = mu, color="black")   
```

## 

```{r}
mu = 0
sd = 1
n = 10

rv = data.frame(rv = rnorm(n,mu,sd))

ggplot(rv,
       aes(x=rv)) +
  geom_histogram(bins = 5,
                 binwidth = 1, 
                 fill="steelblue", 
                 color="white") +
  labs(x="Value", 
       y="Frequency", ) +
  theme_classic()+
  geom_vline(xintercept = mean(rv$rv), color="lightpink", linetype="dashed")+
  geom_vline(xintercept = mu, color="black")   
```

## 

```{r}
mu = 0
sd = 1
n = 30

rv = data.frame(rv = rnorm(n,mu,sd))
ggplot(rv,
       aes(x=rv)) +
  geom_histogram(bins = 5,
                 binwidth = 1, 
                 fill="steelblue", 
                 color="white") +
  labs(x="Value", 
       y="Frequency", ) +
  theme_classic()+
  geom_vline(xintercept = mean(rv$rv), color="lightpink", linetype="dashed")+
  geom_vline(xintercept = mu, color="black")   
```

## 

```{r}
mu = 0
sd = 1
n = 100

rv = data.frame(rv = rnorm(n,mu,sd))

ggplot(rv,
       aes(x=rv)) +
  geom_histogram(bins = 5,
                 binwidth = 1, 
                 fill="steelblue", 
                 color="white") +
  labs(x="Value", 
       y="Frequency", ) +
  theme_classic()+
  geom_vline(xintercept = mean(rv$rv), color="lightpink", linetype="dashed")+
  geom_vline(xintercept = mu, color="black")   
```

## 极大似然估计(Maximum Likelihood Estimation)

![](images/image-106947643.png){fig-align="center"}

## 

![](images/image-1621915864.png){fig-align="center"}

<center>平均值是期望值的最佳估计量，即与其他统计量相比，平均值更能反映期望值</center>

## 不同类型的平均数

-   算术平均数(Arithmetic mean)</br>

    -   算术平均数是指在一组数据中所有数据之和再除以数据的个数。它是统计学中最基本、最常用的一种平均指标，分为简单算术平均数、加权算术平均数。

    -   $\bar{X} = \frac{\sum x_i}{n}$(简单)

    -   $\bar{X} = \frac{\sum x_i*f_i}{\sum fi}，f代表权重$(加权)

-   几何平均数(Geometric mean)</br>

    -   n个变量值连乘积的n次方根，通常用于计算平均利率或发展速度。

    -   $\sqrt[N](X_1,X_2,X_3......X_N)$

## 小练习

|            | 中央后区 | 顶叶 | 运动皮层 | 体感皮层 |
|------------|----------|------|----------|----------|
| 数值(微伏) | 6        | 4    | 3        | 2        |
| 权重       | 0.35     | 0.35 | 0.2      | 0.1      |

-   已知EEG的电极记录的是大脑皮层神经元集群的活动总和。CPz电极所记录的脑电信号来自于多个脑区，包括中央后区、顶叶、运动皮层和体感皮层等。假定这些脑区的放电率（即神经元的放电频率）对CPz电极的贡献的权重和记录到的放电率如上表，请问CPz电极处记录到的电压是多少？

-   注意：由于大脑活动非常复杂，这个结果仅仅是一个近似值。实际上，大脑皮层的电信号受到许多因素的影响，如噪声、电极位置和神经元的具体活动模式等。因此，用这样一个简单的模型来计算电压是不太准确的。

## 算术平均数的特性

-   $\sum X = \bar{X}*n$

-   $\sum (X-\bar{X}) = 0$

-   $\frac{\sum (x \pm C)}{n} = \bar{X}\pm C$

-   $\frac{\sum(x * C)}{n} = \bar{X} * C$

## 算术平均数的优缺点

-   对数据的变化很敏感;

-   确定性和唯一性;

-   适用于进一步的代数计算;

-   受抽样变化的影响较小

-   容易受到极端值的影响

## 中位数(Median)

-   中位数指的是一组数据按大小顺序排列后，处于中间位置的数。

-   如果数据集有奇数个数，那么中位数就是这些数中间那个数；如果数据集有偶数个数，中位数就是中间两个数的平均数。

## 中位数的优缺点

-   对数据变化的敏感度比平均值低

-   不适合进一步的代数计算

-   适用于顺序变量

## 

```{r}

 boxplot(penguin_rawdata$selfcontrol, main = "Boxplot of Self control", ylab = "Value", col = "lightblue")
ggplot(penguin_rawdata,aes(x = sex, y = selfcontrol,fill = sex))+
  ggdist::stat_halfeye(adjust=.5,width=.3,.width=0,justification=-.3)+
  geom_boxplot(width=.1,outlier.shape = NA)+
  gghalves::geom_half_point(side="1",range_scale = .4,alpha=.5)+
  scale_fill_manual(values = c("lightblue", "lightpink"))+
  theme_bw()
 

ggplot(penguin_rawdata, aes(x = sex, y = selfcontrol,fill = sex)) +
  geom_boxplot(varwidth = TRUE, alpha = 0.7) + # vary boxes width according to n obs.
  geom_jitter(alpha = 0.15, width = 0.2) + # adds random noise and limit its width
 # divide into 2 panels
  scale_fill_manual(values = c("lightblue", "lightpink")) +
  scale_y_continuous() +
  scale_x_discrete()+
  labs(title = "Self Control by Sex", x = "Sex", y = "Self Control")+
  theme_bw()
 

ggviolin(penguin_rawdata, "sex", "selfcontrol", color = "sex",
 palette = c("lightblue", "lightpink"), add = c("boxplot", "mean_sd"))
  
```

## 众数(Mode)

-   众数是指在一组数据中出现次数最多的数值，也可以说是数据集中的最常见的数值。

-   假设以下是某个班级学生的考试成绩：85, 90, 75, 85, 92, 85, 89, 90, 92, 85, 其中，85出现的次数最多，因此85是这组数据的众数。

## 众数的优缺点

-   不能进一步进行代数运算

-   对中心趋势能够快速而准确地估计

## 平均数、中位数、众数之间的关系

<h6 style="text-align: center; font-size: 32px; ">

在正态分布中, 平均值、中位数、众数都是同一个值

</h6>

![](images/image-472975297.png){fig-align="center"}

## 

<h6 style="text-align: center; font-size: 32px; ">

在非正态分布中, 平均值、中位数、众数都有所不同

</h6>

## 

```{r}
ggplot(penguin_rawdata, 
       aes(x=selfcontrol)) +
  geom_histogram(bins = 5,
                 binwidth = 0.5, 
                 fill="steelblue", 
                 color="white") +
  labs(x="Value", 
       y="Frequency", 
       title="Distribution of self control") +
  theme_classic()

```

## 

```{r}
ggplot(penguin_rawdata, 
       aes(x=selfcontrol)) +
  geom_histogram(binwidth = 0.5, 
                 fill="steelblue", 
                 color="white") +
  labs(x="Value", 
       y="Frequency", 
       title="Distribution of self control") +
  theme_classic()+
  geom_vline(xintercept = mean(penguin_rawdata$selfcontrol), color="red", linetype="dashed")
```

## 

```{r}
ggplot(penguin_rawdata, 
       aes(x=selfcontrol)) +
  geom_histogram(binwidth = 0.5, 
                 fill="steelblue", 
                 color="white") +
  labs(x="Value", 
       y="Frequency", 
       title="Distribution of self control") +
  theme_classic()+
  geom_vline(xintercept = median(penguin_rawdata$selfcontrol), color='purple', linetype="dashed")
```

## 

```{r}
getmode <- function(v) {
   uniqv <- unique(v)
   uniqv[which.max(tabulate(match(v, uniqv)))]
}

ggplot(penguin_rawdata, 
       aes(x=selfcontrol)) +
  geom_histogram(bins = 5,
                 binwidth = 0.5, 
                 fill="steelblue", 
                 color="white") +
  labs(x="Value", 
       y="Frequency", 
       title="Distribution of self control") +
  theme_classic()+
  geom_vline(xintercept = getmode(penguin_rawdata$selfcontrol), color="lightpink", linetype="dashed")
```

## 

```{r}
ggplot(penguin_rawdata, 
       aes(x=selfcontrol)) +
  geom_histogram(bins = 5,
                 binwidth = 0.5, 
                 fill="steelblue", 
                 color="white") +
  labs(x="Value", 
       y="Frequency", 
       title="Distribution of self control") +
  theme_classic()+
  geom_vline(xintercept = getmode(penguin_rawdata$selfcontrol), color="lightpink", linetype="dashed")+
  geom_vline(xintercept = mean(penguin_rawdata$selfcontrol), color="red", linetype="dashed")+
  geom_vline(xintercept = median(penguin_rawdata$selfcontrol), color='purple', linetype="dashed")
```

## 

</br></br>

::: columns
::: {.column width="50%"}
![](images/image-339505180.png){fig-align="center"}
:::

::: {.column width="50%"}
![](images/image-316741941.png){fig-align="center"}
:::
:::

## 

</br></br> 在一个倾斜的频率分布曲线中，平均数（Mean）和中位数（Median）之间的距离是平均数（Mean）和模式（Mode）之间的三分之一。</br></br>

-   Karl Pearson的公式: mean-mode=3(mean-median)</br></br>

-   model=3median - 2mean</br></br>

## 

</br></br></br></br>

<h3 style="text-align: center; font-size: 32px; ">

Caution: You may be fooled by central tendency

<h3>

## 

![](images/image-1152388484.png){fig-align="center"}

<center>(U.S. Census Bureau, Annual Social and Economic Supplement, available at https://www.census.gov/data/ tables/time-series/demo/income-poverty/cps-hinc/hinc-06.html.)</center>

## 

</br></br>

<h3 style="text-align: center; font-size: 32px; ">

Q: Why is the term 'average' misunderstood by most people?

<h3>

</br></br>

Most people think that 'average' means 'normal', or 'most common', but it actually means the mathematical mean.

# 差异量数</br>

-   数据绕平均值变化的程度

## 全距(range)

-   描述一组数据的离散程度的一项指标，它是数据中最大值和最小值之间的差值。全距可以帮助了解数据的变化范围和数据分布的广泛程度。

-   range = 最大值 - 最小值

## 

![](images/image-1451747870.png){fig-align="center"}

## 

![](images/image-317794618.png){fig-align="center"}

</br></br>

<center>Range = 37-19=18</center>

## 全距的优缺点

-   描绘出分布的全貌

-   容易受到极端值的影响

## 四分位距(Interquartile range, IQR)

-   $IQR = 𝑄_3−𝑄_1$

-   IQR : interquartile range

-   $𝑄_3$ : 3rd quartile or 75th percentile

-   $𝑄_1$ : 1st quartile or 25th percentile

## 四分位距的计算（Calculation of IQR）

-   Even-numbered data set

-   ![](images/IQR1.png){fig-align="center"}

-   Odd-numbered data set

![](images/IQR2.png){fig-align="center"}

-   $IQR = 𝑄_3−𝑄_1 = 81 – 57 = 24$

<!-- -->

-   Inclusive method
-   ![](images/IQR3.png){fig-align="center"}
-   $$𝑄_1= (57+61)/2=59$$
-   $$𝑄_3= (77+81)/2=79$$
-   $$IQR = 𝑄_3−𝑄_1
         = 79 – 59 = 20$$

## 四分位距（IQR）

-   在箱线图中，箱的宽度显示了四分位距。更小的宽度意味着更少的分散，而更大的宽度意味着更多的分散。

-   ![](images/image-759625968.png){fig-align="center"}

## 

![](images/IQR4.png){fig-align="center"}

## 

```{r}
boxplot(penguin_rawdata$selfcontrol, main = "Boxplot of Self control", ylab = "Value", col = "lightblue")
```

## 方差(variance)

-   方差衡量的是与平均值的差异性。

-   方差的单位（单位平方）与原始值不同

## 标准差(Standard Deviation)

-   标准差是方差的平方根

-   标准差的单位与原始数据相同

## 

![](images/image-885423111.png){fig-align="center"}

## 标准差(Standard Deviation)

-   sum square, $SS =\sum (x - \mu)^2$

-   mean square, $MS = SS/N$

-   variance, $\sigma^2 = \frac{\sum(X-\mu)^2}{N}$

-   standard deviation, $$\sigma =\sqrt(\frac{(x-\mu)^2}{N}) $$

## 

```{r}
set.seed(123)  # 设置随机数种子以便结果可复现
x1 <- rnorm(1000, mean = 0, sd = 1)
x2 <- rnorm(1000, mean = 0, sd = 2)
df <- data.frame(value = c(x1, x2),
                 group = rep(c("Group 1", "Group 2"), each = 1000))

ggplot(df, aes(x = value, 
               fill = group)) + 
  geom_density(alpha = 0.5) +
  theme_classic() +
  scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
  labs(title = "Density Plot of Two Groups",
       x = "Value", y = "Density",
       fill = "Group")
```

## 相对地位量数

## 百分位数

-   百分位数（percentile）是统计学中常用的概念，表示在一个数据集中，某个特定百分比的数据位于该数据集的哪个位置。

-   计算百分位数的方法是：首先将数据集按照大小进行排序，然后确定要计算的百分位数p（例如，p=75表示计算第75个百分位数），然后找到排名为np/100的数据，如果np/100不是整数，则将其向上取整，并将其作为第np个百分位数的位置，即第np个百分位数为该位置对应的数据值。</br>

## 百分位数的计算

$$𝑃_𝑝= 𝐿_𝑝 + (𝑃/100  × 𝑁−𝐹_𝑏)/𝑓_𝑝 ×𝑖$$ $$ 𝐿_𝑝：百分位数所在组的精确下限$$ $$𝐹_𝑏：小于𝐿_𝑝的累计次数$$ $$ 𝑓_𝑝：百分位数所在组的次数$$ $$𝑖 : 组距$$ $$𝑁 : 总次数$$

## 百分位数的计算

$$𝑃_𝑝= 𝑈_𝑝 - ((1− 𝑃/100)  × 𝑁−𝐹_𝑎)/𝑓_𝑝 ×𝑖$$ $$U_𝑝 ：百分位数所在组的精确上限$$ $$𝐹_𝑎  ：大于𝑈_𝑝的累计次数$$ $$𝑓_𝑝：百分位数所在组的次数$$ $$𝑖 : 组距$$

$$𝑁 : 总次数$$

## 百分等级

-   百分等级（percentile rank）是一个数值在其所在数据集合中的位置百分比。例如，如果某个数值的百分等级为80%，则说明在与该数值相同大小的数据集合中，该数值排名位于前20%。

计算百分等级的方法是：首先将数据集按照大小进行排序，然后找到该数值在数据集中的位置，即排名为n，然后计算该数值的百分等级为n/N，其中N是数据集的大小。

## 百分等级的计算

$$𝑃𝑅=  (𝐹_b  + (𝑋 − 𝐿_𝑝)/𝑖  ×𝑓_𝑝)/𝑁$$ $$𝐿_𝑝：百分位数所在组的精确下限$$ $$𝐹_𝑏：小于𝐿_𝑝的累计次数$$ $$L_𝑝：百分位数所在组的次数$$ $$𝑖 : 组距$$ $$𝑁 : 总次数$$

## 百分等级的计算

$$𝑃𝑅= [1−(𝐹_𝑎  + (𝑈_𝑃  − 𝑋)/𝑖  ×𝑓_𝑝)/𝑁]×100$$ $$𝑈_𝑝 ：百分位数所在组的精确上限$$ $$𝐹_𝑎  ：大于𝑈_𝑝的累计次数$$ $$f_𝑝：百分位数所在组的次数$$ $$𝑖 : 组距$$ $$𝑁 : 总次数$$

## 

![](images/image-818727381.png){fig-align="center"}

## 

![](images/image-2004687837.png){fig-align="center"}

## 总结

-   **集中量数**

-   **离散量数**

## R的安装

-   **R 下载**

    -   官网：<https://www.r-project.org/>

-   **Rtools下载**

    -   https://cran.r-project.org/bin/windows/Rtools/

-   **Rstudio 下载**

    -   [https://www.rstudio.com](https://www.rstudio.com/)
